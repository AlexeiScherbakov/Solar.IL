#include "version.h"

.class public abstract sealed auto ansi beforefieldinit
    Solar.FlagEnumUtil
        extends [CORE_ASSEMBLY]System.Object
{
    .method public hidebysig static int32
        FlagCount<valuetype .ctor (class [CORE_ASSEMBLY]System.Enum, class [CORE_ASSEMBLY]System.ValueType) TEnum>(
            !!0/*TEnum*/ this
        ) cil managed
    {
        .custom instance void [CORE_ASSEMBLY]System.Runtime.CompilerServices.ExtensionAttribute::.ctor()
         = (01 00 00 00 )
        .maxstack 8
        .locals init (
            [0] int32 size
            )
        sizeof !!0
        stloc.0
        ldloc.0
        ldc.i4.1
        sub
        switch (byte_branch,short_branch,invalid_branch,int_branch)
        ldloc.0
        ldc.i4.8
        beq.s long_branch
invalid_branch:
        ldc.i4.m1
        ret
byte_branch: 
        ldarg.0       
        conv.u1
        call    int32 [CORE_ASSEMBLY]System.Numerics.BitOperations::PopCount(unsigned int32)
        ret
short_branch:
        ldarg.0
        conv.u2
        call    int32 [CORE_ASSEMBLY]System.Numerics.BitOperations::PopCount(unsigned int32)
        ret
int_branch:
        ldarg.0
        call    int32 [CORE_ASSEMBLY]System.Numerics.BitOperations::PopCount(unsigned int32)
        ret
long_branch:
        ldarg.0
        conv.u8
        call    int32 [CORE_ASSEMBLY]System.Numerics.BitOperations::PopCount(unsigned int64)
        ret
    }
}